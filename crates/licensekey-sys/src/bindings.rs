/* automatically generated by rust-bindgen 0.69.4 */

extern "C" {
    pub fn licensekey_verify(
        app_name: *const ::std::os::raw::c_char,
        app_id: ::std::os::raw::c_int,
        major_version: ::std::os::raw::c_int,
        minor_version: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn licensekey_verify_ex(
        app_name: *const ::std::os::raw::c_char,
        app_id: ::std::os::raw::c_int,
        major_version: ::std::os::raw::c_int,
        minor_version: ::std::os::raw::c_int,
        licensekey_path: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn licensekey_get_exp_date(
        app_name: *const ::std::os::raw::c_char,
        licensekey_path: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn licensekey_get_state_string(
        state_code: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum LicenseKeyState {
    STATE_VALIDATION_ERROR = 0,
    STATE_VALID = 1,
    STATE_INVALID_VERSION = 2,
    STATE_EXPIRED_DATE = 3,
    STATE_ILLEGAL_APPLICATION_ID_MISMATCH = 4,
    STATE_ILLEGAL_DEVICE_ID_MISMATCH = 5,
    STATE_ILLEGAL_MISSING_FIELDS = 6,
    STATE_ILLEGAL_INVALID_ENTRY_APPLICATION_ID = 7,
    STATE_ILLEGAL_INVALID_ENTRY_MIN_MAJOR = 8,
    STATE_ILLEGAL_INVALID_ENTRY_MIN_MINOR = 9,
    STATE_ILLEGAL_INVALID_ENTRY_MAX_MAJOR = 10,
    STATE_ILLEGAL_INVALID_ENTRY_MAX_MINOR = 11,
    STATE_ILLEGAL_KEY_DECODING_FAILS = 12,
    STATE_ILLEGAL_INVALID_SIGNATURE = 13,
    NUM_LICENSEKEY_STATES = 14,
}
extern "C" {
    pub static mut LicenseKeyState: LicenseKeyState;
}
